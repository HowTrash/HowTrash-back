version: "3"

volumes:
  mysql_data:

services:
  mysqldb:
    build: ./db
    env_file:
      - "./db/db.env"
    ports:
      - "8989:3306"
    volumes:
      - "mysql_data:/var/lib/mysql"
  backend:
    build: ./backend
    command: >
      bash -c "python wait_mysql.py &&
               python manage.py makemigrations &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8080"
    ports:
      - "8080:8080"
    volumes:
      - ./backend:/app
    depends_on:
      - mysqldb
#  nginx:
#    build: ./nginx
#    ports:
#      - 80:80
#    volumes:
#      - ./nginx:/etc/nginx
#    depends_on:
#      - mysqldb
#      - backend
#  frontend:
#    build: ./frontend
#    command: ["npm", "start"]
#    ports:
#      - 3000:3000
#    volumes:
#    - ./frontend:/app
#####################################################
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/config/:/etc/prometheus/
      - ./prometheus/prometheus-volume:/prometheus # volumes 설정한다면 이부분 주석처리
      # - prometheus_data:/prometheus
    ports:
      - 9090:9090
    command:
      - '--web.enable-lifecycle'
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 3000:3000
#    volumes:
#      - ~/prometheus/grafana-volume:/var/lib/grafana # volumes 설정한다면 이부분 주석처리
#      - ./config/grafana-init.ini:/etc/grafana/grafana.ini
#      # - grafana_data:/var/lib/grafana
    restart: always
